<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd' []>
<rfc ipr="trust200902" category="std" docName="draft-ietf-uta-smtp-tlsrpt-00">
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc private=""?>
<?rfc topblock="yes"?>
<?rfc comments="no"?>
<front>
<title abbrev="SMTP-TLSRPT">SMTP TLS Reporting</title>

<author initials="DM" surname="Margolis" fullname="Daniel Margolis">
<organization>Google, Inc</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>dmargolis (at) google.com</email>
<uri></uri>
</address>
</author>
<author initials="AB" surname="Brotman" fullname="Alexander Brotman">
<organization>Comcast, Inc</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>alexander_brotman (at) cable.comcast (dot com)</email>
<uri></uri>
</address>
</author>
<author initials="BR" surname="Ramakrishnan" fullname="Binu Ramakrishnan">
<organization>Yahoo!, Inc</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>rbinu (at) yahoo-inc (dot com)</email>
<uri></uri>
</address>
</author>
<author initials="JJ" surname="Jones" fullname="Janet Jones">
<organization>Microsoft, Inc</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>janet.jones (at) microsoft (dot com)</email>
<uri></uri>
</address>
</author>
<author initials="MR" surname="Risher" fullname="Mark Risher">
<organization>Google, Inc</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>risher (at) google (dot com)</email>
<uri></uri>
</address>
</author>
<date year="2016" month="April" day="18"/>

<area>Applications</area>
<workgroup>Using TLS in Applications</workgroup>
<keyword></keyword>


<abstract>
<t>SMTP Mail Transfer Agents often conduct encrypted communication on the Internet
through the use of Transport Layer Security (TLS). Because the STARTTLS protocol
is opportunistic in nature, malicious and misconfigured intermediaries can
interfere with the successful establishment of suitable encryption, and such
interference is not always detectable by the receiving server. This document
provides transparency into failures in the SMTP MTA Strict Transport Security
policy (TODO: Add ref), negotiation of STARTTLS <xref target="RFC3207"/>, and the DNS-Based
Authentication of Named Entities (DANE, <xref target="RFC6698"/>).
</t>
</abstract>


</front>

<middle>

<section anchor="introduction" title="Introduction">
<t>The STARTTLS extension to SMTP <xref target="RFC3207"/> allows SMTP clients and hosts to
establish secure SMTP sessions over TLS. The protocol design is based on
&quot;Opportunistic Security&quot; (OS) <xref target="RFC7435"/>, which provides interoperability for
clients that do not support it, but means that any attacker who can delete
parts of the SMTP session (such as the &quot;250 STARTTLS&quot; response) or who can
redirect the entire SMTP session (perhaps by overwriting the resolved MX record
of the delivery domain) can perform such a downgrade or interception attack.
</t>
<t>Because such &quot;downgrade attacks&quot; are not necessarily apparent to the receiving
MTA, this document defines a mechanism for sending domains to report on
failures at multiple parts of the MTA-to-MTA conversation.
</t>
<t>Specifically, this document defines a reporting schema that covers failures
in routing, STARTTLS negotiation, and both DANE <xref target="RFC7671"/> and STS (TODO: Add
ref) policy validation errors.
</t>
<t>Implementers establish a policy by publishing a TXT record in the DNS which
instructs comliant sending MTAs to deliver reports of delivery and STARTTLS
failures in the appropriate format to the specified endpoint.
</t>
<t>This document is intended as a companion to the specification for SMTP MTA
Strict Transport Security (MTA-STS, TODO: Add ref).
</t>

<section anchor="terminology" title="Terminology">
<t>The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT,
SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when
they appear in this document, are to be interpreted as described in <xref target="RFC2119"/>.
</t>
<t>We also define the following terms for further use in this document:
</t>
<t>
<list style="symbols">
<t>STS Policy: A definition of the expected TLS availability and behavior, as
well as the desired actions for a given domain when a sending MTA encounters
different results.</t>
<t>Policy Domain: The domain against which an STS Policy is defined.</t>
<t>Sending MTA: The MTA initiating the delivery of an email message.</t>
</list>
</t>
</section>
</section>

<section anchor="related-technologies" title="Related Technologies">
<t>
<list style="symbols">
<t>This document is intended as a companion to the specification for SMTP MTA
Strict Transport Security (MTA-STS, TODO: Add ref).</t>
<t>The Public Key Pinning Extension for HTTP <xref target="RFC7469"/> contains a JSON-based
definition for reporting individual pin validation failures.</t>
<t>The Domain-based Message Authentication, Reporting, and Conformance (DMARC)
<xref target="RFC7489"/> contains an XML-based reporting format for aggregate and
detailed email delivery errors.</t>
</list>
</t>
</section>

<section anchor="reporting-policy" title="Reporting Policy">
<t>SMTP TLSRPT policies are distributed via DNS from the Policy Domain's zone,
either through a new resource record, or as TXT records (similar to DMARC
policies) under the name <spanx style="verb">_smtp_tlsrpt</spanx>. (Current implementations deploy as TXT
records.) For example, for the Policy Domain <spanx style="verb">example.com</spanx>, the recipient's
SMTP STS policy can be retrieved from <spanx style="verb">_smtp_tlsrpt.example.com</spanx>.
</t>
<t>(Future implementations may move to alternate methods of policy discovery or
distribution. See the section <spanx style="emph">Future</spanx> <spanx style="emph">Work</spanx> for more discussion.)
</t>
<t>Policies consist of the following directives:
</t>
<t>
<list style="symbols">
<t><spanx style="verb">version</spanx>: This value MUST be equal to <spanx style="verb">TLSRPT1</spanx>.</t>
<t><spanx style="verb">aggregate-report-uri</spanx>: A URI specifying the endpoint to which aggregate
 information about policy failures should be sent (see the section
 <spanx style="emph">Reporting Schema</spanx> for more information). Two URI schemes are supported:
 <spanx style="verb">mailto</spanx> and <spanx style="verb">https</spanx>.
<list style="symbols">
<t>In the case of <spanx style="verb">https</spanx>, reports should be submitted via POST
(<xref target="RFC2818"/>) to the specified URI.</t>
<t>In the case of <spanx style="verb">mailto</spanx>, reports should be submitted to the specified
email address. When sending failure reports via SMTP, sending MTAs MUST
NOT honor SMTP STS or DANE TLSA failures.</t>
</list></t>
<t><spanx style="verb">detailed-report-uri</spanx>: Future use. (There may also be a need for enabling
 more detailed &quot;forensic&quot; reporting during initial stages of a deployment.
 To address this, the authors consider the possibility of an optional
 additional &quot;forensic reporting mode&quot; in which more details--such as
 certificate chains and MTA banners--may be reported. See the section
 <spanx style="emph">Future</spanx> <spanx style="emph">Work</spanx> for more details.)</t>
</list>
</t>

<section anchor="example-reporting-policy" title="Example Reporting Policy">

<section anchor="report-using-mailto" title="Report using MAILTO:">
<t>```_smtp_tlsrpt.mail.example.com. IN TXT 
<vspace/>
        &quot;version:TLSRPT1;aggregate-report-uri:mailto:reports@example.com&quot;
</t>

<figure align="center"><artwork align="center">

### Report using HTTPS:

```_smtp_tlsrpt.mail.example.com. IN TXT \
		"version:TLSRPT1; \
		aggregate-report-uri:https://reporting.example.com/v1/tlsrpt"
</artwork></figure>
</section>
</section>
</section>

<section anchor="reporting-schema" title="Reporting Schema">
<t>Aggregate reports contain the following fields:
</t>
<t>
<list style="symbols">
<t><spanx style="emph">Report metadata</spanx>:
<list style="symbols">
<t>The organization responsible for the report</t>
<t>Contact information for one or more responsible parties for the contents
of the report</t>
<t>A unique identifier for the report</t>
<t>The reporting date range for the report</t>
</list></t>
<t><spanx style="emph">Applied policy</spanx>, consisting of:
<list style="symbols">
<t>One of the following policy types:
<list style="symbols">
<t>The SMTP MTA STS policy applied (as a string)</t>
<t>The DANE TLSA record applied (as a string)</t>
</list></t>
<t>The domain for which the policy is applied</t>
<t>The MX host</t>
<t>An identifier for the policy (where applicable)</t>
</list></t>
<t><spanx style="emph">Aggregate counts</spanx>, comprising <spanx style="emph">result type</spanx>, <spanx style="emph">sending MTA IP</spanx>, <spanx style="emph">receiving
MTA hostname</spanx>, <spanx style="emph">message count</spanx>, and an optional <spanx style="emph">additional information</spanx>
field containing a URI for recipients to review further information on a
failure type.</t>
</list>
</t>
<t>Note that the failure types are non-exclusive; an aggregate report MAY contain
overlapping <spanx style="verb">counts</spanx> of failure types where a single send attempt encountered
multiple errors.
</t>

<section anchor="result-types" title="Result Types">
<t>The list of result types will start with the minimal set below, and is expected
  to grow over time based on real-world experience. The initial set is:
</t>

<section anchor="success-type" title="Success Type">
<t>
<list style="symbols">
<t><spanx style="verb">success</spanx>: This indicates that the sending MTA was able to successfully
negotiate a policy-compliant TLS connection, and serves to provide a
&quot;heartbeat&quot; to receiving domains that reporting is functional and
tabulating correctly.


<vspace/></t>
</list>
</t>
</section>

<section anchor="routing-failures" title="Routing Failures">
<t>
<list style="symbols">
<t><spanx style="verb">mx-mismatch</spanx>: This indicates that the MX resolved for the recipient domain
did not match the MX constraint specified in the policy.</t>
<t><spanx style="verb">certificate-mismatch</spanx>: This indicates that the certificate presented by the
receiving MX did not match the MX hostname</t>
</list>
</t>
</section>

<section anchor="negotiation-failures" title="Negotiation Failures">
<t>
<list style="symbols">
<t><spanx style="verb">starttls-not-supported</spanx>: This indicates that the recipient MX did not
support STARTTLS.</t>
<t><spanx style="verb">invalid-certificate</spanx>: This indicates that the certificate presented by the
receiving MX did not validate according to the policy validation constraint.
(Either it was not signed by a trusted CA or did not match the DANE TLSA
record for the recipient MX.)</t>
<t><spanx style="verb">expired-certificate</spanx>: This indicates that the certificate has expired.</t>
</list>
</t>

<section anchor="danespecific-policy-failures" title="DANE-specific Policy Failures">
<t>
<list style="symbols">
<t><spanx style="verb">tlsa-invalid</spanx>: This indicates a validation error for Policy Domain
specifying &quot;tlsa&quot; validation.</t>
<t><spanx style="verb">dnssec-invalid</spanx>: This indicates a failure to validate DNS records for a
Policy Domain with a published &quot;tlsa&quot; record.</t>
</list>
</t>
</section>

<section anchor="stsspecific-policy-failures" title="STS-specific Policy Failures">
<t>
<list style="symbols">
<t><spanx style="verb">sts-invalid</spanx>: This indicates a validation error for Policy Domain
specifying &quot;STS&quot; validation.</t>
<t>sender-does-not-support-validation-method: This indicates the sending system
can never validate using the requested validation mechanism.</t>
</list>
</t>
</section>
</section>
</section>
</section>

<section anchor="reporting-delegation" title="Reporting Delegation">
<t>It is possible to specify destinations for the different reports that
   are outside the authority of the Policy Domain making the request.
   This allows domains that do not operate mail servers to request
   reports and have them go someplace that is able to receive and
   process them.
</t>
<t>Without checks, this would allow a bad actor to publish a TLS-RPT policy
   record that requests that reports be sent to a victim address, potentially
   causing the victim to be flooded with unwanted reports. Therefore, a
   verification mechanism is included as inspired by Section 7.1 from
   <xref target="RFC7489"/>.
</t>
<t>When a sending MTA discovers an TLS-RPT policy in the DNS, and the
   Organizational Domain at which that record was discovered is not
   identical to the Organizational Domain of the host part of the
   authority component of a [URI] specified in the &quot;rua&quot; or &quot;ruf&quot; tag,
   the following verification steps are to be taken:
</t>
<t>
<list style="numbers">
<t>Extract the host portion of the authority component of the URI.
   Call this the &quot;destination host&quot;, as it refers to a Report
   Receiver.</t>
<t>Prepend the string &quot;_report._tlsrpt&quot;.</t>
<t>Prepend the domain name from which the policy was retrieved,
   after conversion to an A-label if needed.</t>
<t>Query the DNS for a TXT record at the constructed name.  If the
   result of this request is a temporary DNS error of some kind
   (e.g., a timeout), the Mail Receiver MAY elect to temporarily
   fail the delivery so the verification test can be repeated later.</t>
<t>For each record returned, parse the result as a series of
   &quot;tag:value&quot; pairs, i.e., the same overall format as the policy
   record.  In particular, the &quot;version:TLSRPT1&quot; tag is
   mandatory and MUST appear first in the list.  Discard any that do
   not pass this test.</t>
<t>If the result includes no TXT resource records that pass basic
   parsing, a positive determination of the external reporting
   relationship cannot be made; stop.</t>
<t>If at least one TXT resource record remains in the set after
   parsing, then the external reporting arrangement was authorized
   by the Report Receiver.</t>
<t>If a &quot;aggregate-report-uri&quot; or &quot;detailed-report-uri&quot; tag is thus
discovered, replace the corresponding value extracted with the one found in
this record. This permits the Report Receiver to override the report
destination. However, to prevent loops or indirect abuse, the overriding URI
MUST use the same destination host from the first step.</t>
</list>
</t>

<figure align="center"><artwork align="center">
   **TODO FIX to match TLSRPT (instead of DMARC) if we think we need this.**

   For example, if a TLSRPT policy query for "blue.example.com" contained
   "rua=mailto:reports@red.example.net", the host extracted from the
   latter ("red.example.net") does not match "blue.example.com", so this
   procedure is enacted.  A TXT query for
   "blue.example.com._report._dmarc.red.example.net" is issued.  If a
   single reply comes back containing a tag of "v=DMARC1", then the
   relationship between the two is confirmed.  Moreover,
   "red.example.net" has the opportunity to override the report
   destination requested by "blue.example.com" if needed.

   Where the above algorithm fails to confirm that the external
   reporting was authorized by the Report Receiver, the URI MUST be
   ignored by the Mail Receiver generating the report.  Further, if the
   confirming record includes a URI whose host is again different than
   the domain publishing that override, the Mail Receiver generating the
   report MUST NOT generate a report to either the original or the
   override URI.

   A Report Receiver publishes such a record in its DNS if it wishes to
   receive reports for other domains.

   A Report Receiver that is willing to receive reports for any domain
   can use a wildcard DNS record.  For example, a TXT resource record at
   "*._report._dmarc.example.com" containing at least "v=DMARC1"
   confirms that example.com is willing to receive DMARC reports for any
   domain.

   If the Report Receiver is overcome by volume, it can simply remove
   the confirming DNS record.  However, due to positive caching, the
   change could take as long as the time-to-live (TTL) on the record to
   go into effect.

   A Mail Receiver might decide not to enact this procedure if, for
   example, it relies on a local list of domains for which external
   reporting addresses are permitted.
</artwork></figure>
</section>

<section anchor="iana-considerations" title="IANA Considerations">
<t>There are no IANA considerations at this time.
</t>
</section>

<section anchor="security-considerations" title="Security Considerations">
<t>SMTP TLS Reporting provides transparency into misconfigurations and attempts to
intercept or tamper with mail between hosts who support STARTTLS. There are
several security risks presented by the existence of this reporting channel:
</t>
<t>
<list style="symbols">
<t><spanx style="emph">Flooding of the</spanx> <spanx style="verb">aggregate-report-uri</spanx> <spanx style="emph">endpoint</spanx>: An attacker could
flood the endpoint and prevent the receiving domain from accepting
additional reports. This type of Denial-of-Service attack would limit
visibility into STARTTLS failures, leaving the receiving domain blind to an
ongoing attack.</t>
<t><spanx style="emph">Untrusted content</spanx>: An attacker could inject malicious code into the
report, opening a vulnerability in the receiving domain. Implementers are
advised to take precautions against evaluating the contents of the report.</t>
</list>
</t>
</section>

<section anchor="appendix-1-xml-schema-for-failure-reports" title="Appendix 1: XML Schema for Failure Reports">

<figure align="center"><artwork align="center" type="xml">

&lt;?xml version="1.0"?&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:tns="http://www.example.org/smtp-sts-xml/0.1" 
	targetNamespace="http://www.example.org/smtp-sts-xml/0.1"&gt;
	&lt;!-- The time range
in UTC covered by messages in this report, specified in seconds since epoch.
--&gt;
	&lt;xs:complexType name="DateRangeType"&gt;
		&lt;xs:all&gt;
			&lt;xs:element name="begin" type="xs:integer"/&gt;
			&lt;xs:element name="end" type="xs:integer"/&gt;
		&lt;/xs:all&gt;
	&lt;/xs:complexType&gt;
	&lt;!-- Report generator metadata. --&gt;
	&lt;xs:complexType name="ReportMetadataType"&gt;
		&lt;xs:sequence&gt;
			&lt;xs:element name="org_name" type="xs:string"/&gt;
			&lt;xs:element name="email" type="xs:string"/&gt;
			&lt;xs:element name="extra_contact_info" type="xs:string" 
				minOccurs="0"/&gt;
			&lt;xs:element name="report_id" type="xs:string"/&gt;
			&lt;xs:element name="date_range" type="tns:DateRangeType"/&gt;
		&lt;/xs:sequence&gt;
	&lt;/xs:complexType&gt;
	&lt;!-- The
constraints applied in a policy --&gt;
	&lt;xs:simpleType name="ConstraintType"&gt;
		&lt;xs:restriction base="xs:string"&gt;
			&lt;xs:enumeration value="WebPKI"/&gt;
			&lt;xs:enumeration value="TLSA"/&gt;
		&lt;/xs:restriction&gt;
	&lt;/xs:simpleType&gt;
	&lt;!-- The
policy that was applied at send time. --&gt;
	&lt;xs:complexType name="AppliedPolicyType"&gt;
		&lt;xs:all&gt;
			&lt;xs:element name="domain" type="xs:string"/&gt;
			&lt;xs:element name="mx" type="xs:string" minOccurs="1"/&gt;
			&lt;xs:element name="constraint" type="tns:ConstraintType"/&gt;
			&lt;xs:element name="policy_id" type="xs:string"/&gt;
		&lt;/xs:all&gt;
	&lt;/xs:complexType&gt;
	&lt;!-- The possible failure types
applied in a policy --&gt;
	&lt;xs:simpleType name="FailureType"&gt;
		&lt;xs:restriction base="xs:string"&gt;
			&lt;xs:enumeration value="MxMismatch"/&gt;
			&lt;xs:enumeration value="InvalidCertificate"/&gt;
			&lt;xs:enumeration value="ExpiredCertificate"/&gt;
			&lt;xs:enumeration value="StarttlsNotSupported"/&gt;
			&lt;xs:enumeration value="TlsaInvalid"/&gt;
			&lt;xs:enumeration value="DnssecInvalid"/&gt;
			&lt;xs:enumeration value="SenderDoesNotSupportValidationMethod"/&gt;
		&lt;/xs:restriction&gt;
	&lt;/xs:simpleType&gt;
	&lt;!-- The possible enforcement level: whether the reporter also
drops messages --&gt;
	&lt;xs:simpleType name="EnforcementLevelType"&gt;
		&lt;xs:restriction base="xs:string"&gt;
			&lt;xs:enumeration value="ReportOnly"/&gt;
			&lt;xs:enumeration value="Reject"/&gt;
		&lt;/xs:restriction&gt;
	&lt;/xs:simpleType&gt;
	&lt;!-- Record for individual
failure types. --&gt;
	&lt;xs:complexType name="FailureRecordType"&gt;
		&lt;xs:all&gt;
			&lt;xs:element name="failure" type="tns:FailureType"/&gt;
			&lt;xs:element name="count" type="xs:integer"/&gt;
			&lt;xs:element name="hostname" type="xs:string"/&gt;
			&lt;xs:element name="connectedIp" type="xs:string" minOccurs="0"/&gt;
			&lt;xs:element name="sourceIp" type="xs:string" minOccurs="0"/&gt;
		&lt;/xs:all&gt;
	&lt;/xs:complexType&gt;
	&lt;!-- Parent --&gt;
	&lt;xs:element name="feedback"&gt;
		&lt;xs:complexType&gt;
			&lt;xs:sequence&gt;
				&lt;xs:element name="version" type="xs:decimal"/&gt;
				&lt;xs:element name="report_metadata" 
                                  type="tns:ReportMetadataType"/&gt;
				&lt;xs:element name="applied_policy" 
                                  type="tns:AppliedPolicyType"/&gt;
				&lt;xs:element name="enforcement_level" 
                                  type="tns:EnforcementLevelType"/&gt;
				&lt;xs:element name="record" type="tns:FailureRecordType" 
					maxOccurs="unbounded"/&gt;
			&lt;/xs:sequence&gt;
		&lt;/xs:complexType&gt;
	&lt;/xs:element&gt;
&lt;/xs:schema&gt;


</artwork></figure>
</section>

<section anchor="appendix-2-example-xml-report" title="Appendix 2: Example XML Report">

<figure align="center"><artwork align="center">
&lt;?xml version="1.0"?&gt;
&lt;feedback xmlns="http://www.example.org/smtp-sts-xml/0.1"&gt;
	&lt;version&gt;1&lt;/version&gt;
	&lt;report_metadata&gt;
		&lt;org_name&gt;Company-X&lt;/org_name&gt;
		&lt;email&gt;sts-reporting@company-x.com&lt;/email&gt;
		&lt;extra_contact_info/&gt;
		&lt;report_id&gt;12345&lt;/report_id&gt;
		&lt;date_range&gt;
			&lt;begin&gt;1439227624&lt;/begin&gt;
			&lt;end&gt;1439313998&lt;/end&gt;
		&lt;/date_range&gt;
	&lt;/report_metadata&gt;
	&lt;applied_policy&gt;
		&lt;domain&gt;company-y.com&lt;/domain&gt;
		&lt;mx&gt;*.mx.mail.company-y.com&lt;/mx&gt;
		&lt;constraint&gt;WebPKI&lt;/constraint&gt;
		&lt;policy_id&gt;33a0fe07d5c5359c&lt;/policy_id&gt;
	&lt;/applied_policy&gt;
	&lt;enforcement_level&gt;ReportOnly&lt;/enforcement_level&gt;
	&lt;record&gt;
		&lt;failure&gt;ExpiredCertificate&lt;/failure&gt;
		&lt;count&gt;13128&lt;/count&gt;
		&lt;hostname&gt;mta7.mx.mail.company-y.com&lt;/hostname&gt;
		&lt;connectedIp&gt;98.136.216.25&lt;/connectedIp&gt;
	&lt;/record&gt;
	&lt;record&gt;
		&lt;failure&gt;StarttlsNotSupported&lt;/failure&gt;
		&lt;count&gt;19&lt;/count&gt;
		&lt;hostname&gt;mta7.mx.mail.company-y.com&lt;/hostname&gt;
		&lt;connectedIp&gt;98.22.33.99&lt;/connectedIp&gt;
	&lt;/record&gt;
&lt;/feedback&gt;

</artwork></figure>
</section>

<section anchor="appendix-3-json-report-schema" title="Appendix 3: JSON Report Schema">
<t>The JSON schema is derived from the HPKP JSON schema <xref target="RFC7469"/> (cf. Section 3)
</t>

<figure align="center"><artwork align="center">
{
	 "organization-name": organization-name,
     "date-range": {
		 "start-datetime": date-time,
		 "end-datetime": date-time
	 },
	 "contact-info": email-address,
	 "report-id": report-id,
	 "applied-policy": {
		 "policy-type": policy-type,
		 "policy-string": policy-string,
		 "policy-domain": domain,
		 "mx-host": mx-host-pattern,
		 "policy-id": policy-id
	 },
	 "report-items": [
	 	{
			"result-type": result-type,
			"sending-mta-ip": ip-address,
			"receiving-mta-hostname": receiving-mta-hostname,
			"message-count": message-count,
			"additional-information": additional-info-uri
		}
	 ]
}
</artwork></figure>
<t>Figure x: JSON Report Format
</t>
<t>
<list style="symbols">
<t><spanx style="verb">organization-name</spanx>: The name of the organization responsible for the
report. It is provided as a string.</t>
<t><spanx style="verb">date-time</spanx>: The date-time indicates the start- and end-times for the
report range. It is provided as a string formatted according to
Section 5.6, &quot;Internet Date/Time Format&quot;, of <xref target="RFC3339"/>.</t>
<t><spanx style="verb">email-address</spanx>: The contact information for a responsible party of the
report. It is provided as a string formatted according to Section 3.4.1,
&quot;Addr-Spec&quot;, of <xref target="RFC5322"/>.</t>
<t><spanx style="verb">report-id</spanx>: A unique identifier for the report. Report authors may use
whatever scheme they prefer to generate a unique identifier. It is provided
as a string.</t>
<t><spanx style="verb">policy-type</spanx>: The type of policy that was applied by the sending domain.
Presently, the only two valid choices are <spanx style="verb">tlsa</spanx> and <spanx style="verb">sts</spanx>. It is provided
as a string.</t>
<t><spanx style="verb">policy-string</spanx>: The string serialization of the policy, whether TLSA
record or STS policy. Any linefeeds from the original policy MUST be
replaced with [SP]. TODO: Help with specifics.</t>
<t><spanx style="verb">domain</spanx>: The Policy Domain upon which the policy was applied. For messages
sent to <spanx style="verb">user@example.com</spanx> this field would contain <spanx style="verb">example.com</spanx>. It is
provided as a string.</t>
<t><spanx style="verb">mx-host-pattern</spanx>: The pattern of MX hostnames from the applied policy. It
is provided as a string.</t>
<t><spanx style="verb">policy-id</spanx>: The version number of the STS policy, or left blank for TLSA.</t>
<t><spanx style="verb">result-type</spanx>: A value from the <spanx style="emph">Result Types</spanx> section above.</t>
<t><spanx style="verb">ip-address</spanx>: The IP address of the sending MTA that attempted the STARTTLS
connection. It is provided as a string representation of an IPv4 or IPv6
address.</t>
<t><spanx style="verb">receiving-mta-hostname</spanx>: The hostname of the receiving MTA with which the
sending MTA referenced in the <spanx style="verb">ip-address</spanx> field attempted to negotiate a
STARTTLS connection.</t>
<t><spanx style="verb">message-count</spanx>: The number of (attempted) messages that match the relevant
<spanx style="verb">result-type</spanx> for this section.</t>
<t><spanx style="verb">additional-info-uri</spanx>: An optional URI pointing to additional information
around the relevant <spanx style="verb">result-type</spanx>. For example, this URI might host the
complete certificate chain presented during an attempted STARTTLS session.</t>
</list>
</t>
</section>

<section anchor="appendix-4-example-json-report" title="Appendix 4: Example JSON Report">

<figure align="center"><artwork align="center">
{
	 "organization-name": "Company-X",
     "date-range": {
		 "start-datetime": "2016-04-01T00:00:00Z",
		 "end-datetime": "2016-04-01T23:59:59Z"
	 },
	 "contact-info": "sts-reporting@company-x.com",
	 "report-id": "5065427c-23d3-47ca-b6e0-946ea0e8c4be",
	 "applied-policy": {
		 "policy-type": "sts",
		 "policy-string": TODO: Add me,
		 "policy-domain": "company-y.com",
		 "mx-host": "*.mx.mail.company-y.com",
		 "policy-id": "33a0fe07d5c5359c"
	 },
	 "report-items": [
	 	{
			"result-type": "ExpiredCertificate",
			"sending-mta-ip": "98.136.216.25",
			"receiving-mta-hostname": "mta7.mx.mail.company-y.com",
			"message-count": 13128
		},
	 	{
			"result-type": "StarttlsNotSupported",
			"sending-mta-ip": "98.22.33.99",
			"receiving-mta-hostname": "mta7.mx.mail.company-y.com",
			"message-count": 19,
			"additional-information": "hxxps://reports.company-x.com" /
                          "/report_info?id=5065427c-23d3#StarttlsNotSupported"
		}
	 ]
}
</artwork></figure>
</section>

</middle>
<back>
<references title="Normative References">
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3207.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3339.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5322.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6698.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7435.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7469.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7489.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7671.xml"?>
</references>

</back>
</rfc>
